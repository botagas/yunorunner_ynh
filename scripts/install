#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INSTALL INCUS
#=================================================
ynh_script_progression "Installing Incus... (this may take a long time!)"

# if ! yunohost app list --output-as json --quiet | jq -e '.apps[] | select(.id == "incus")' >/dev/null; then
#     yunohost app install --force https://github.com/YunoHost-Apps/incus_ynh
# fi

setup_incus

#=================================================
# DOWNLOAD, CHECK, AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

_git_clone_or_pull "$install_dir/yunorunner"
_git_clone_or_pull "$install_dir/package_check" https://github.com/YunoHost/package_check

chown "$app:$app" "$install_dir"

chmod -R o-rwx "$install_dir"
chown -R "$app:$app" "$install_dir"
chown "$app:www-data" "$install_dir" "$install_dir/yunorunner"
chown -R "$app:www-data" "$install_dir/yunorunner/results"

#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
ynh_script_progression "Installing Python dependencies..."

pushd "$install_dir"
    python3 -m venv venv
    venv/bin/pip install --upgrade pip
    venv/bin/pip install -r yunorunner/requirements.txt
    # package_check dep not in apt
    venv/bin/pip install imgkit
popd

#=================================================
# CREATE AND CONFIGURE CONFIG.PY
#=================================================
ynh_script_progression "Configuring YunoRunner settings..."

cat <<EOF > "$install_dir/yunorunner/config.py"
BASE_URL = "https://$domain"
BASE_PUBLIC_URL = "$publicdir"
EXECUTOR = "$executor"
APPSREPO = "$appsrepo"
PORT = 8095
MONITOR_APPS_LIST = False
MONITOR_GIT = False
MONITOR_ONLY_GOOD_QUALITY_APPS = False
MONTHLY_JOBS = False
WORKER_COUNT = 1
YNH_BRANCH = "$ynhbranch"
DIST = "$distributionchoice"
PACKAGE_CHECK_DIR = "/var/www/yunorunner/package_check/"
GITHUB_COMMIT_STATUS_TOKEN = "$githubtoken"
GITHUB_WEBHOOK_SECRET = "$webhooksecret"
EOF

chmod 400 "$install_dir/yunorunner/config.py"
chown "$app:$app" "$install_dir/yunorunner/config.py"

if [ "$context" == "official_infra" ] && [ "${PACKAGE_CHECK_EXEC:-0}" -ne 0 ]; then
    tweak_yunohost
fi

#=================================================
# MODIFY RUN.PY
#=================================================
ynh_script_progression "Updating run.py for custom configuration..."

run_py="$install_dir/yunorunner/run.py"

# Replace BASE_URL with BASE_PUBLIC_URL for specific URLs if publicdir is provided
if [[ -n "$publicdir" ]]; then
    ynh_replace --match="badge_url = app.config.BASE_URL + app.url_for(\"api_badge_job\", job_id=job.id)" --replace="badge_url = app.config.BASE_PUBLIC_URL + app.url_for(\"api_badge_job\", job_id=job.id)" --file="$run_py"

    ynh_replace --match="summary_url = app.config.BASE_URL + \"/summary/\" + str(job.id) + \".png\"" --replace="summary_url = app.config.BASE_PUBLIC_URL + \"/summary/\" + str(job.id) + \".png\"" --file="$run_py"
fi

# Replace executor validation logic
ynh_replace --match="if hook_infos\[\"pull_request\"\]\[\"user\"\]\[\"login\"\] not in \[.*\]" --replace="valid_user = (app.config.EXECUTOR == \"\" or hook_infos[\"pull_request\"][\"user\"][\"login\"] == app.config.EXECUTOR)" --file="$run_py"

# Replace ref validation logic
ynh_replace --match="or not hook_infos\[\"pull_request\"\]\[\"head\"\]\[\"ref\"\]\.startswith\\(.*\\)" --replace="valid_ref = hook_infos[\"pull_request\"][\"head\"][\"ref\"].startswith(\"ci-auto-update-\")\n\n    if not valid_user or not valid_ref:" --file="$run_py"

# Replace debug message for unauthorized PRs
ynh_replace --match="api_logger\.debug\(\"Received a pull_request webhook but from an unknown github user\." --replace="api_logger.debug(\"Received a pull_request webhook but from an unauthorized user or invalid ref.\")" --file="$run_py"

#=================================================
# MODIFY TEST_CATALOG.PY
#=================================================
ynh_script_progression "Updating test_catalog.py for custom configuration..."

test_catalog_py="$install_dir/package_check/package_linter/tests/test_catalog.py"

# Add config import
ynh_replace --match="^" --replace="from yunorunner.config import *\n" --file="$test_catalog_py"

# Modify _fetch_app_repo to use APPSREPO
ynh_replace --match="https://github.com/YunoHost/apps" --replace="app.config.APPSREPO" --file="$test_catalog_py"

# Modify is_in_github_org to use EXECUTOR dynamically
ynh_replace --match="repo_org = .+YunoHost-Apps" --replace="repo_org = f\"https://github.com/{app.config.EXECUTOR}/%s_ynh\" % (self.app_id)" --file="$test_catalog_py"

ynh_replace --match="repo_brique = .+labriqueinternet" --replace="repo_brique = f\"https://github.com/{app.config.EXECUTOR}/%s_ynh\" % (self.app_id)" --file="$test_catalog_py"

pip install --break-system-packages imgkit


#=================================================
# ADD SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd
yunohost service add "$app" --description="$app daemon for YunoRunner"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemdctl --service_name="$app" --action="start" --log_path="systemd" --timeout=30

#=================================================
# FINISH INSTALLATION
#=================================================
ynh_script_progression "Installation of $app completed!"
