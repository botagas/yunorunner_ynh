#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# ACTIVATE MAINTENANCE MODE
#=================================================

ynh_maintenance_mode_ON

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop" --log_path="systemd"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# if [ ! -d "$install_dir/yunorunner/" ]; then
#     mkdir -p "$install_dir/yunorunner/"
#     mv .git maintenance results static templates .gitignore ciclic models README.md requirements.txt requirements-frozen.txt run.py schedule.py "$install_dir/yunorunner/"
# fi

# Close a legacy port
if yunohost firewall list | grep -q "\- $port$"; then
    ynh_hide_warnings yunohost firewall disallow TCP "$port"
fi

if [[ -z "${context:-}" ]]; then
    if grep -q "CI_APP" /etc/hosts; then
        context=official_infra
    else
        context=personal_ci
    fi
    ynh_app_setting_set --app="$app" --key="context" --value="$context"
fi

if [[ -z "${cluster:-}" ]]; then
    if lxc cluster list >/dev/null 2>&1; then
        cluster=1
    else
        cluster=0
    fi
    ynh_app_setting_set --app="$app" --key="cluster" --value="$cluster"
fi

# Values now use underscore
if echo "$context" | grep -- -; then
    context=$(echo "$context" | tr - _)
    ynh_app_setting_set --app="$app" --key="context" --value="$context"
fi

# cluster is now a boolean
if [[ "$cluster" == "cluster" ]] || [[ "$cluster" == "no" ]]; then
    if [[ "$cluster" == "cluster" ]]; then
        cluster=1
    else
        cluster=0
    fi
    ynh_app_setting_set --app="$app" --key="cluster" --value="$cluster"
fi

if [ ! -d "$install_dir/package_check" ]; then
    ynh_exec_as_app git clone https://github.com/YunoHost/package_check "$install_dir/package_check"
    ynh_exec_as_app git clone https://github.com/YunoHost/package_linter "$install_dir/package_check/package_linter"

fi

# Remove Pythonz
ynh_safe_rm "$install_dir/.pythonz"

# This was moved to incus package
if [ -f "/etc/yunohost/hooks.d/post_iptable_rules/50-${app}" ]; then
    ynh_safe_rm "/etc/yunohost/hooks.d/post_iptable_rules/50-${app}"
fi

#=================================================
# INSTALL INCUS
#=================================================
if yunohost app list --output-as json --quiet | jq -e '.apps[] | select(.id == "lxd")' >/dev/null; then
    # Remove lxd_ynh
    ynh_script_progression "Removing LXD.."
    yunohost app remove lxd
fi

ynh_script_progression "Installing Incus... (this make take a long time!)"

if ! yunohost app list --output-as json --quiet | jq -e '.apps[] | select(.id == "incus")' >/dev/null; then
    yunohost app install --force https://github.com/YunoHost-Apps/incus_ynh
    setup_incus
fi

# Always do it on upgrade, just in case
usermod -aG incus-admin "$app"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

_git_clone_or_pull "$install_dir/yunorunner"
_git_clone_or_pull "$install_dir/package_check" https://github.com/YunoHost/package_check

chmod -R o-rwx "$install_dir"
chown -R "$app:$app" "$install_dir"
chown "$app:www-data" "$install_dir" "$install_dir/yunorunner"
chown -R "$app:www-data" "$install_dir/yunorunner/results"

#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
ynh_script_progression "Installing Python dependencies..."

pushd "$install_dir"
    python3 -m venv venv
    venv/bin/pip install --upgrade pip
    venv/bin/pip install -r yunorunner/requirements.txt
    venv/bin/pip install -r package_check/requirements.txt
    # package_check dep not in apt
    venv/bin/pip install imgkit
    venv/bin/pip install jsonschema
    venv/bin/pip install pyparsing
popd

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating a config file..."

ynh_backup_if_checksum_is_different "$install_dir/yunorunner/config.py"

chmod 400 "$install_dir/yunorunner/config.py"
chown "$app:$app" "$install_dir/yunorunner/config.py"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..." --weight=1

# Create a dedicated NGINX config
ynh_config_add_nginx
ynh_config_add --template="cron" --destination="/etc/cron.d/$app"

# Create a dedicated systemd config
yunohost service add "$app" --description="YunoRunner package testing service"
ynh_config_add_systemd
#=================================================
# APPLY PATCHES
#=================================================
ynh_script_progression "Applying patches to Python scripts..."

ynh_replace \
    --match=$'ci_name = app.config.BASE_URL.lower().replace(\"https://\", \"\").split(\".\")[0]' \
    --replace=$'ci_name = app.config.BASE_PUBLIC_URL.lower().replace(\"https://\", \"\").split(\".\")[0]' \
    --file="/var/www/yunorunner/yunorunner/run.py"

ynh_replace \
    --match="badge_url = app.config.BASE_URL + app.url_for(\"api_badge_job\", job_id=job.id)" \
    --replace="badge_url = app.config.BASE_PUBLIC_URL + app.url_for(\"api_badge_job\", job_id=job.id)" \
    --file="/var/www/yunorunner/yunorunner/run.py"

ynh_replace \
    --match="summary_url = app.config.BASE_URL + f\"/summary/{job.id}.png\"" \
    --replace="summary_url = app.config.BASE_PUBLIC_URL + f\"/summary/{job.id}.png\"" \
    --file="/var/www/yunorunner/yunorunner/run.py"

# Add new config variables to default_config
ynh_replace \
    --match="\"BASE_URL\": \"\"," \
    --replace="\"BASE_URL\": \"\",\n        \"BASE_PUBLIC_URL\": \"\",\n        \"EXECUTOR\": \"\",\n        \"APPSREPO\": \"\"," \
    --file="/var/www/yunorunner/yunorunner/run.py"

# Replace "github-actions[bot]" with app.config.EXECUTOR
ynh_replace \
    --match="\"github-actions\[bot\]\",\s*" \
    --replace="app.config.EXECUTOR," \
    --file="/var/www/yunorunner/yunorunner/run.py"

# Remove "yunohost-bot"
ynh_replace \
    --match="\"yunohost-bot\",\s*" \
    --replace="" \
    --file="/var/www/yunorunner/yunorunner/run.py"

# Replace "ci-auto-update-" with an empty string
ynh_replace \
    --match="\"ci-auto-update-"\" \
    --replace='""' \
    --file="/var/www/yunorunner/yunorunner/run.py"

# Replace the GitHub API membership check with an immediate return 204
ynh_replace \
    --match=$'f"https://api.github.com/orgs/YunoHost-Apps/members/{user}",' \
    --replace=$'f"https://api.github.com/orgs/YunoHost-Apps/members/tituspijean",' \
    --file="/var/www/yunorunner/yunorunner/run.py"

# Replace job_url in body statement with public_url
ynh_replace \
    --match='job_url = app.config.BASE_URL + app.url_for("html_job", job_id=job.id)' \
    --replace='job_url = app.config.BASE_URL + app.url_for("html_job", job_id=job.id)\n    public_url = app.config.BASE_PUBLIC_URL + app.url_for("html_job", job_id=job.id)' \
    --file="/var/www/yunorunner/yunorunner/run.py"

cat "$PWD/status-integration" >> "/var/www/yunorunner/yunorunner/run.py"

mv "$PWD/apply_changes.py" "/var/www/yunorunner/yunorunner/apply_changes.py"
chown "$app:$app" "/var/www/yunorunner/yunorunner/apply_changes.py"
chmod 744 "/var/www/yunorunner/yunorunner/apply_changes.py"
/usr/bin/env python3 "$PWD/run_job_changes.py"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start" --log_path="systemd" --timeout=30

#=================================================
# DEACTIVATE MAINTENANCE MODE
#=================================================

ynh_maintenance_mode_OFF

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
